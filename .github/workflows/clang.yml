name: Build for Ubuntu with clang

on:
  push:
    branches-ignore:
      - 'translations_*'
    tags: []
  pull_request:
    paths-ignore:
      - '**.po'


jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}

    strategy:
        fail-fast: false
        matrix:
          postgis: [3]
          release: [Debug,Release]
          os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v2

      - name: get postgres version
        run: |
          sudo service postgresql start
          pgver=$(psql --version | grep -Po '(?<=psql \(PostgreSQL\) )[^;]+(?=\.\d \()')
          echo "PGVER=${pgver}" >> $GITHUB_ENV
          PGP=5433
          if [ "${{ matrix.psql }}" == "${pgver}" ]; then PGP=5432; fi
          echo "PGPORT=5432" >> $GITHUB_ENV

      - name: Add PostgreSQL APT repository
        run: |
          sudo apt-get install curl ca-certificates gnupg
          curl https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
          sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ \
            $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            clang \
            libboost-graph-dev \
            libtap-parser-sourcehandler-pgtap-perl \
            postgresql-${PGVER} \
            postgresql-${PGVER}-pgtap \
            postgresql-${PGVER}-postgis-${{ matrix.postgis }} \
            postgresql-${PGVER}-postgis-${{ matrix.postgis }}-scripts \
            postgresql-${PGVER}-pgrouting \
            postgresql-server-dev-${PGVER}

      - name: Install VROOM dependencies
        run: |
          sudo apt-get install libssl-dev libasio-dev libglpk-dev

      - name: Build VROOM v1.10.0
        run: |
          wget https://github.com/VROOM-Project/vroom/archive/refs/tags/v1.10.0.tar.gz
          tar -zvxf v1.10.0.tar.gz
          cd vroom-1.10.0/src

          # Create object file with position independent code using -fPIC flag
          sed -i 's/CXXFLAGS = /CXXFLAGS = -fPIC /' makefile

          make
          cd ..
          echo "VROOM_INSTALL_PATH=$(pwd)" >> $GITHUB_ENV

      - name: Configure
        run: |
          export PATH=/usr/lib/postgresql/${PGVER}/bin:$PATH
          mkdir build
          cd build
          CXX=clang++ CC=clang cmake -DPOSTGRESQL_VERSION=${PGVER} -DCMAKE_BUILD_TYPE=${{ matrix.release }} -DWITH_DOC=OFF -DVROOM_INSTALL_PATH=${VROOM_INSTALL_PATH} ..

      - name: Build
        run: |
          cd build
          make -j 4
          sudo make install

      - name: Unpack data
        run: |
          cd tools/testers
          tar -xf matrix_new_values.tar.gz

      - name: pgTap test
        run: |
          sudo service postgresql start
          sudo -u postgres createdb -p ${PGPORT}  ___vrp___test___
          cd tools/testers
          sudo -u postgres psql -p "${PGPORT}" -U postgres -d ___vrp___test___ -X -q -v ON_ERROR_STOP=1 --pset pager=off -f setup_db.sql
          sudo -u postgres pg_prove --failures --quiet --recurse --ext .sql -p "${PGPORT}" -d ___vrp___test___ -U postgres ../../pgtap/
